controller:
  nginxplus: true
  image:
    repository: docker.udf.nginx.rocks/nginx-plus-ingress
    tag: 2.0.3-ubi-nap
  setAsDefaultIngress: true
  ingressClass: nginx
  enableCustomResources: true
  enablePreviewPolicies: true
  enableSnippets: true
  appprotect:
    ## Enable the App Protect module in the Ingress Controller.
    enable: false
  healthStatus: true
  enableLatencyMetrics: true
  nginxStatus:
    ## Enable the NGINX stub_status, or the NGINX Plus API.
    enable: true
    port: 8080
    ## Add IPv4 IP/CIDR blocks to the allow list for the NGINX Plus API. Separate multiple IP/CIDR by commas.
    allowCidrs: "0.0.0.0/0"
  service:
    type: NodePort
    externalTrafficPolicy: Cluster
    extraLabels:
      # needs to match ServiceMonitor matchLabels
      app: nginx-ingress-controller
    httpPort:
      enable: true
      port: 80
      nodePort: 30274
      targetPort: 80
    httpsPort:
      enable: true
      port: 443
      nodePort: 30275
      targetPort: 443
    customPorts:
    - name: dashboard
      targetPort: 8080
      protocol: TCP
      port: 8080
      nodePort: 30080
    - name: prometheus
      targetPort: 9113
      protocol: TCP
      port: 9113
      nodePort: 30113
  config:
    entries:
      # resolver-addresses: kube-dns.kube-system.svc.cluster.local
      http2: "true"
      resolver-valid: 5s
      # smarter LB method:
      lb-method: "least_time last_byte"
      # for debugging
      error-log-level: info
      # plus logging:
      log-format:  |-
        $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent 
        "$http_referer" "$http_user_agent" "$http_x_forwarded_for" rn="$resource_name" 
        "$resource_type" "$resource_namespace" svc="$service" 
        "$request_id" rt=“$request_time” ua=“$upstream_addr” 
        uct="$upstream_connect_time" uht="$upstream_header_time" 
        urt="$upstream_response_time" uqt=“$upstream_queue_time“ cs=“$upstream_cache_status“
prometheus:
  create: true
  scheme: http
  port: 9113
